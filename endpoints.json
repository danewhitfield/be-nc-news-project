{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api. You can use this enpoint as your index reference üìá"
  },
  "GET /api/topics": {
    "description": "provides an array of all topics üëá",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }, { "slug": "coding", "description": "Coding!" }]
    }
  },
  "GET /api/articles": {
    "description": "provides an array of all articles üåç",
    "queries": [],
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2020-09-16 17:26:00"
        }
      ]
    }
  },
  "GET /api/articles/:article_id": {
    "description": "finds articles based on the article_id üîç",
    "ids": ["1", "2", "3", "4", "5", "6"],
    "exampleResponse": {
      "articles": [
        {
          "title": "Sony Vaio; or, The Laptop",
          "topic": "mitch",
          "author": "icellusedkars",
          "body": "Call me Mitchell. Some years ago‚Äînever mind how long precisely‚Äîhaving little or no money in my purse, and nothing particular to interest me on shore, I thought I would buy a laptop about a little and see the codey part of the world.",
          "created_at": "2020-10-16 13:26:00",
          "votes": 0
        }
      ]
    }
  },
  "PATCH /api/articles/:article_id": {
    "description": "updates the vote count specific to the article_id üÜï",
    "queries": [],
    "request-body": { "inc_votes": 26 },
    "exampleResponse": {
      "articles": [
        {
          "article_id": 1,
          "title": "Living in the shadow of a great man",
          "topic": "mitch",
          "author": "butter_bridge",
          "body": "I find this existence challenging",
          "created_at": "2020-11-07 06:03:00",
          "votes": "126 <<< was 100 before the patch"
        }
      ]
    }
  },
  "GET /api/articles/:article_id/comments": {
    "description": "an array of comments for the given article_id of each comment üí¨",
    "queries": [],
    "exampleResponse": {
      "articles": [
        {
          "comment_id": 10,
          "body": "git push origin master",
          "article_id": 3,
          "author": "icellusedkars",
          "votes": 0,
          "created_at": "2020-07-02 12:23:00"
        },
        {
          "comment_id": 11,
          "body": "Ambidextrous marsupial",
          "article_id": 3,
          "author": "icellusedkars",
          "votes": 0,
          "created_at": "2020-07-07 00:13:00"
        }
      ]
    }
  },
  "POST /api/articles/:article_id/comments": {
    "description": "accepts a username and comment body to add a new comment ‚úÖ",
    "queries": [],
    "request-body": {
      "username": "icellusedkars",
      "body": "My code is broken."
    },
    "exampleResponse": {
      "articles": [
        {
          "comment_id": 19,
          "body": "My code is broken.",
          "article_id": 2,
          "author": "icellusedkars",
          "votes": 0,
          "created_at": "2020-06-19 16:03:00"
        }
      ]
    }
  },
  "GET /api/articles?queries": {
    "description": "accepts valid queries to sort_by, order and search topics üí°",
    "queries": ["/api/articles?order=ASC", "/api/articles?sort_by=votes", "/api/articles?topic=coding"],
    "exampleResponse": {
      "articles": [
        {
          "comment_id": 19,
          "body": "My code is broken.",
          "article_id": 2,
          "author": "icellusedkars",
          "votes": 0,
          "created_at": "2020-06-19 16:03:00"
        }
      ]
    }
  },
  "DELETE /api/comments/:comment_id": {
    "description": "deletes comments specific to the passed comment_id. responds with a 204 once the comment is deleted ‚ùå",
    "queries": [],
    "exampleResponse": {
      "articles": [
        {
          "204": "no content"
        }
      ]
    }
  },
  "GET /api/users": {
    "description": "gets an array of users with their username üë§",
    "queries": [],
    "exampleResponse": {
      "users": [
        {
          "username": "butter_bridge"
        },
        {
          "username": "icellusedkars"
        },
        {
          "username": "rogersop"
        },
        {
          "username": "lurker"
        }
      ]
    }
  },
  "POST /api/users": {
    "description": "enables the user to create a new user üë§",
    "queries": [],
    "request-body": {
      "username": "yourUsername",
      "avatarUrl": "http://someimage.com"
    },
    "exampleResponse": {
      "users": [
        {
          "username": "yourUsername",
          "avatarUrl": "http://someimage.com"
        }
      ]
    }
  }
}

